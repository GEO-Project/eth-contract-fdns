var GNS = artifacts.require("GNS");

contract('GNS', function() {

    /*
    "name"
    "name1"
    "name2"
    -------create valid---------
    "name",['0x00','0x00','0x00','0x00','0x03','0x31','0x32','0x33']
    "name",['0x00','0x00','0x00','0x00','0x03','0x31','0x2e','0x33']
    "name",['0x00','0x00','0x00','0x00','0x03','0x71','0x42','0x33']
    "name1",['0x00','0x00','0x00','0x00','0x03','0x71','0x42','0x33']
    "name",['0x01','0xff','0xff','0xff','0xaa']
    "name",['0x01','0xff','0xbb','0xff','0xaa']
    "name",['0x02','0xff','0xbb','0xff','0xaa','0xff','0xbb','0xff','0xaa','0xff','0xbb','0xff','0xaa','0xff','0xbb','0xff','0xaa']
    "name",['0x03','0x31','0x32','0x33']
    "name",['0x03','0x31','0x33','0x33']
    -------filter valid---------
    "name",['0x00']
    "name",['0x01']
    "name",['0x02']
    "name",['0x03']
    "name1",['0x00']
    "name2",['0x00']
    ---------removing-----
    "name",5
    "name",['0x01','0xff','0xff','0xff','0xaa']
    ---------invalid---------
    "na.me",['0x00','0x00','0x00','0x00','0x03','0x31','0x32','0x33']
    "name",['0x00','0x00','0x00','0x00','0x03','0x31','0x32']
    "name",['0x01','0xff','0xff','0xaa']
    "name",['0x02','0xff','0xbb','0xff','0xaa','0xff','0xbb','0xff','0xaa','0xff','0xbb','0xff','0xaa','0xff','0xbb','0xff']
    "name",['0x03']
    "name22",5
    */

    it("create, find, remove records", async () => {
        const gns = await GNS.deployed();

        console.log("address",gns.address);

        await gns.createRecord("name",['0x00','0x00','0x00','0x00','0x03','0x31','0x32','0x33']);
        await gns.createRecord("name",['0x00','0x00','0x00','0x00','0x03','0x31','0x2e','0x33']);
        await gns.createRecord("name",['0x00','0x00','0x00','0x00','0x03','0x71','0x42','0x33']);
        // await gns.createRecord("name1",['0x00','0x00','0x00','0x00','0x03','0x71','0x42','0x33']);
        await gns.createRecord("name",['0x01','0xff','0xff','0xff','0xaa']);
        await gns.createRecord("name",['0x01','0xff','0xbb','0xff','0xaa']);
        await gns.createRecord("name",['0x02','0xff','0xbb','0xff','0xaa','0xff','0xbb','0xff','0xaa','0xff','0xbb','0xff','0xaa','0xff','0xbb','0xff','0xaa']);
        await gns.createRecord("name",['0x03','0x31','0x32','0x33']);
        await gns.createRecord("name",['0x03','0x31','0x33','0x33']);

        assert.equal(await gns.getRecordsCount("name"), 8, "getRecordsCount wrong result");

        const rawRecordAt = await gns.getRawRecordAt("name",1);
        await gns.removeRecord("name",rawRecordAt);
        assert.equal(await gns.getRecordsCount("name"), 7, "removeRecord not work");

        await gns.createRecord("name",['0x00','0x00','0x00','0x00','0x03','0x37','0x32','0x33']);
        let passed = true;
        try {
            await gns.createRecord("name",['0x00','0x00','0x00','0x00','0x03','0x37','0x32','0x33']);
            passed=false;
        }catch (_) {}
        if(!passed){
            throw "createRecord can create record not unique";
        }
    });

    it("access test", async () => {
    });


    it("Amount of gas used", async () => {
    });

});